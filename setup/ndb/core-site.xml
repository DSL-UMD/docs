<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->

<!-- Put site-specific property overrides in this file. -->

<configuration>

  <!-- In: conf/core-site.xml -->
  <property>
    <name>hadoop.tmp.dir</name>
    <value>/srv/hops/hopsdata/tmp</value>
    <description>A base for other temporary directories.</description>
  </property>

  <!--
      <property>
      <name>io.file.buffer.size</name>
      <value>131072</value>
      <description>Size of read/write buffer used in SequenceFiles.</description>
      </property>
  -->

  <property>
    <name>dfs.namenodes.rpc.addresses</name>
    <value>rpc.namenode.service.consul:8020</value>
    <description>HopsFS-specific list of comma-separated host:port pairs for NameNodes.</description>
  </property>

  <property>
    <name>ipc.client.connect.max.retries</name>
    <value>0</value>
    <description>If a HDFS client has a communication problem with a NameNode, retry the connection the number of times specified here.</description>
  </property>

  <property>
    <name>dfs.client.retry.policy.spec</name>
    <value>1000,3</value>
    <description>Retry policy specification. For example "10000,6,60000,10" means retry 6 times with 10 sec delay and then retry 10 times with 1 min delay. </description>
  </property>

  <property>
    <name>dfs.client.retry.policy.enabled</name>
    <value>true</value>
    <description>Enable retry upon connection failure</description>
  </property>

  <property>
    <name>dfs.storage.driver.configfile</name>
    <value>ndb.props</value>
    <description>
    </description>
  </property>

  <property>
    <name>hops.service-discovery.enabled</name>
    <value>true</value>
    <description>Flag to get address from Service Discovery instead of configuration file.</description>
  </property>

  <property>
    <name>hadoop.proxyuser.hdfs.hosts</name>
    <value>*</value>
  </property>
  <property>
    <name>hadoop.proxyuser.hdfs.groups</name>
    <value>*</value>
  </property>
  <property>
    <name>hadoop.proxyuser.glassfish.hosts</name>
    <value>*</value>
  </property>
  <property>
    <name>hadoop.proxyuser.glassfish.groups</name>
    <value>*</value>
  </property>
  <property>
    <name>hadoop.proxyuser.yarn.hosts</name>
    <value>*</value>
  </property>
  <property>
    <name>hadoop.proxyuser.yarn.groups</name>
    <value>*</value>
  </property>
  <property>
    <name>hadoop.proxyuser.yarnapp.hosts</name>
    <value>*</value>
  </property>
  <property>
    <name>hadoop.proxyuser.yarnapp.groups</name>
    <value>*</value>
  </property>
  <property>
    <name>hadoop.proxyuser.rmyarn.hosts</name>
    <value>*</value>
  </property>
  <property>
    <name>hadoop.proxyuser.rmyarn.groups</name>
    <value>*</value>
  </property>
  <property>
    <name>hadoop.proxyuser.livy.hosts</name>
    <value>*</value>
  </property>
  <property>
    <name>hadoop.proxyuser.livy.groups</name>
    <value>*</value>
  </property>
  <property>
    <name>hadoop.proxyuser.hive.hosts</name>
    <value>*</value>
  </property>
  <property>
    <name>hadoop.proxyuser.hive.groups</name>
    <value>*</value>
  </property>
    <property>
    <name>hadoop.proxyuser.jupyter.hosts</name>
    <value>*</value>
  </property>
  <property>
    <name>hadoop.proxyuser.jupyter.groups</name>
    <value>*</value>
  </property>
  <property>
    <name>hadoop.proxyuser.mapred.hosts</name>
    <value>*</value>
  </property>
  <property>
    <name>hadoop.proxyuser.mapred.groups</name>
    <value>*</value>
  </property>
  <property>
    <name>hadoop.proxyuser.sqoop.hosts</name>
    <value>*</value>
  </property>
  <property>
    <name>hadoop.proxyuser.sqoop.groups</name>
    <value>*</value>
  </property>
  <property>
    <name>hadoop.proxyuser.serving.hosts</name>
    <value>*</value>
  </property>
  <property>
    <name>hadoop.proxyuser.serving.groups</name>
    <value>*</value>
  </property>
  <property>
    <name>hadoop.proxyuser.flink.hosts</name>
    <value>*</value>
  </property>
  <property>
    <name>hadoop.proxyuser.flink.groups</name>
    <value>*</value>
  </property>


  <property>
    <name>dfs.leader.check.interval</name>
    <value>2000</value>
    <description>Interval between the NameNode or ResourceMgr running the leader election protocol. </description>
  </property>

  <property>
    <name>dfs.leader.missed.hb</name>
    <value>2</value>
    <description></description>
  </property>

  <property>
    <name>dfs.leader.tp.increment</name>
    <value>100</value>
    <description></description>
  </property>


  <!-- SSL -->
  <property>
    <name>hadoop.ssl.require.client.cert</name>
    <value>false</value>
  </property>
  <property>
    <name>hadoop.ssl.hostname.verifier</name>
    <value>DEFAULT</value>
    <description></description>
  </property>
  <property>
    <name>hadoop.ssl.keystores.factory.class</name>
    <value>org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory</value>
    <description></description>
  </property>
  <property>
    <name>hadoop.ssl.server.conf</name>
    <value>ssl-server.xml</value>
    <description></description>
  </property>
  <property>
    <name>hadoop.ssl.client.conf</name>
    <value>ssl-client.xml</value>
    <description></description>
  </property>


  <property>
    <name>fs.defaultFS</name>
    <value>hdfs://rpc.namenode.service.consul:8020</value>
  </property>

  <property>
    <name>fs.defaultFS.alternativeScheme</name>
    <value>hopsfs</value>
  </property>

  <property>
    <name>fs.trash.interval</name>
    <value>360</value>
  </property>

  <property>
    <name>fs.trash.checkpoint.interval</name>
    <value>60</value>
  </property>

  <property>
    <name>hadoop.security.groups.cache.secs</name>
    <value>1</value>
  </property>

  <property>
    <name>ipc.server.read.threadpool.size</name>
    <value>3</value>
  </property>

  <!-- RPC TLS support -->
  <property>
    <name>ipc.server.ssl.enabled</name>
    <value>false</value>
  </property>

  <property>
    <name>hadoop.ssl.hostname.verifier</name>
    <value>ALLOW_ALL</value>
  </property>

  <property>
    <name>hadoop.rpc.socket.factory.class.default</name>
    <value>org.apache.hadoop.net.StandardSocketFactory</value>
  </property>


  <property>
    <name>hops.hopsworks.host</name>
    <value>https://glassfish.service.consul:443</value>
  </property>

  <!-- Service JWT renewal configuration -->
  <property>
    <name>hops.jwt-manager.master-token-validity</name>
    <value>7d</value>
  </property>

  <property>
    <name>hops.jwt-manager.service-renew-path</name>
    <value>/hopsworks-api/api/jwt/service</value>
  </property>

  <property>
    <name>hops.jwt-manager.service-invalidate-path</name>
    <value>/hopsworks-api/api/jwt/service</value>
  </property>







</configuration>
